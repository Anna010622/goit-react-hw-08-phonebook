{"version":3,"file":"static/js/38.3dc2229b.chunk.js","mappings":"gUAoBMA,EAASC,EAAAA,GACL,CACNC,MAAOD,EAAAA,KAAaE,WAAWD,QAAQE,OACvCC,SAAUJ,EAAAA,KAAaE,WAAWC,OAAOE,IAAI,KAE9CH,WAoEH,UAlEc,WACZ,IAAMI,GAAKC,EAAAA,EAAAA,IAAkB,WAAY,WACnCC,GAAWC,EAAAA,EAAAA,MAEjB,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,YACNC,UAAUC,EAAAA,EAAAA,GAAYd,KALtBe,EADF,EACEA,SACAC,EAFF,EAEEA,aAFF,IAGEC,UAAaC,EAHf,EAGeA,OAAQC,EAHvB,EAGuBA,aAKjBC,GAAWC,EAAAA,EAAAA,MAQjB,OACE,UAAC,IAAD,CACEC,SAAUN,GARG,SAAAO,GACfd,GAASe,EAAAA,EAAAA,IAAMD,IACZE,SACAC,OAAM,kBAAMC,EAAAA,GAAAA,MAAA,iCAAN,GACV,IAKGC,GAAG,OACHC,GAAG,OACHC,EAAG,CAAEC,KAAM,MAAOC,GAAI,KACtBC,EAAE,IALJ,WAOE,SAAC,IAAD,UAAS,0BAET,UAAC,KAAD,CAAaC,UAAWhB,EAAOhB,MAAOiC,YAAU,EAAhD,WACE,SAAC,IAAD,UAAW,WACX,SAAC,EAAAC,GAAD,gBAAOC,KAAK,SAAYtB,EAAS,UAAjC,IAA2CR,GAAIA,MAC/C,SAAC,KAAD,UACGW,EAAOhB,OAASgB,EAAOhB,MAAMoC,cAIlC,UAAC,KAAD,CAAaJ,UAAWhB,EAAOb,SAAU8B,YAAU,EAAnD,WACE,SAAC,IAAD,UAAW,cACX,SAAC,EAAAC,GAAD,gBAAOC,KAAK,YAAetB,EAAS,aAApC,IAAiDR,GAAIA,MACrD,SAAC,KAAD,UACGW,EAAOb,UAAYa,EAAOb,SAASiC,cAIxC,SAAC,IAAD,CACED,KAAK,SACLE,QAAQ,UACRC,YAAY,OACZC,UAAWtB,EAJb,SAKC,WAID,SAAC,IAAD,CACEuB,QAAS,kBAAMtB,EAAS,YAAf,EACToB,YAAY,OACZD,QAAQ,QAHV,SAIC,cAKN,C","sources":["pages/Login.jsx"],"sourcesContent":["import {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  VStack,\n  Heading,\n  Button,\n  useColorModeValue,\n} from '@chakra-ui/react';\n\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\n\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from 'redux/auth/authOperations';\n\nconst schema = yup\n  .object({\n    email: yup.string().required().email().trim(),\n    password: yup.string().required().trim().min(7),\n  })\n  .required();\n\nconst Login = () => {\n  const bg = useColorModeValue('gray.100', '#0a192f');\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n  } = useForm({\n    mode: 'onTouched',\n    resolver: yupResolver(schema),\n  });\n  const navigate = useNavigate();\n\n  const onSubmit = data => {\n    dispatch(login(data))\n      .unwrap()\n      .catch(() => toast.error(`Email or password is incorrect`));\n  };\n\n  return (\n    <VStack\n      onSubmit={handleSubmit(onSubmit)}\n      as=\"form\"\n      mx=\"auto\"\n      w={{ base: '90%', md: 500 }}\n      p=\"4\"\n    >\n      <Heading>Login to the account</Heading>\n\n      <FormControl isInvalid={errors.email} isRequired>\n        <FormLabel>Email</FormLabel>\n        <Input type=\"email\" {...register('email')} bg={bg} />\n        <FormErrorMessage>\n          {errors.email && errors.email.message}\n        </FormErrorMessage>\n      </FormControl>\n\n      <FormControl isInvalid={errors.password} isRequired>\n        <FormLabel>Password</FormLabel>\n        <Input type=\"password\" {...register('password')} bg={bg} />\n        <FormErrorMessage>\n          {errors.password && errors.password.message}\n        </FormErrorMessage>\n      </FormControl>\n\n      <Button\n        type=\"submit\"\n        variant=\"outline\"\n        colorScheme=\"teal\"\n        isLoading={isSubmitting}\n      >\n        Login\n      </Button>\n\n      <Button\n        onClick={() => navigate('/register')}\n        colorScheme=\"teal\"\n        variant=\"ghost\"\n      >\n        Sign up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n"],"names":["schema","yup","email","required","trim","password","min","bg","useColorModeValue","dispatch","useDispatch","useForm","mode","resolver","yupResolver","register","handleSubmit","formState","errors","isSubmitting","navigate","useNavigate","onSubmit","data","login","unwrap","catch","toast","as","mx","w","base","md","p","isInvalid","isRequired","I","type","message","variant","colorScheme","isLoading","onClick"],"sourceRoot":""}